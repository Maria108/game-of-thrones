{"version":3,"sources":["actions/houseAction.js","HouseInfo.js","House.js","actions/bookAction.js","Books.js","actions/characterAction.js","Character.js","Navbar.js","App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["LOAD_HOUSES","loadHouses","payload","dispatch","fetch","then","res","json","houses","type","catch","console","error","getHouse","chosenHouse","HouseInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","members","swornMembers","bind","assertThisInitialized","length","forEach","member","_this2","setState","name","log","infoHouse","undefined","react_default","a","createElement","className","Container","Row","Col","region","coatOfArms","overlord","Component","withRouter","connect","pure","House","handleClick","house","listHouses","map","value","index","key","react_router_dom","to","onClick","react_router","path","component","bindActionCreators","LOAD_BOOKS","loadBooks","books","Books","listBooks","book","GET_CHARACTERS","getCharacters","characters","Character","listCharacter","character","url","slice","NavBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Collapse","id","Nav","React","App","src_Navbar","Boolean","window","location","hostname","match","initialState","reducer","arguments","action","objectSpread","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4TAAaA,EAAc,cAGpB,SAASC,EAAWC,GACzB,OAAO,SAAAC,GACL,OAAOC,MAAM,+DACZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACJL,EAAS,CACPM,KAAMT,EACNE,QAASM,MAGZE,MAAMC,QAAQC,QAIZ,IAAMC,EAAW,SAAAC,GACtB,MAAO,CACLL,KAlBqB,YAmBrBP,QAASY,4CCXPC,cAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,QAAS,IAEXR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IALHA,8EASjB,GAAIG,KAAKJ,MAAMF,YAAYY,aAAaG,OAAS,EAAG,CAGlDT,KAAKJ,MAAMF,YAAYY,aAAaI,QAAQ,SAASC,GAAQ,IAAAC,EAAAZ,KAE3DhB,MAAM2B,GACH1B,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAA0B,GACJC,EAAKC,SAAS,CACZR,QAASM,EAAOG,OAIlBvB,QAAQwB,IAAIH,EAAKC,SAASR,WAE3Bf,MAAMC,QAAQC,2CAcrB,IAAMwB,EAAYhB,KAAKJ,MAAMF,YAC7B,YAAiBuB,IAAdD,EACME,EAAAC,EAAAC,cAAA,mCAGPF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACAJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,aACXH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,eAAyCL,EAAUF,MACnDI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,WAAqCL,EAAUS,QAC/CP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iBAA2CL,EAAUU,YACrDR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aAAuCL,EAAUW,sBArDnCC,aAsETC,kBACbC,YAPF,SAAyB1B,GACvB,MAAO,CACLV,YAAaU,EAAMV,cAOnB,KACA,KACA,CACEqC,MAAM,GALVD,CAOEnC,ICtEEqC,6MAOJC,YAAc,SAACC,GACb,OAAOrC,EAAKD,MAAMH,SAASyC,uFAL3BlC,KAAKJ,MAAMf,aACXmB,KAAKJ,MAAMH,4CAOJ,IAAAmB,EAAAZ,KACPT,QAAQwB,IAAIf,KAAKJ,MAAMR,QACvB,IAAM+C,EAAanC,KAAKJ,MAAMR,OAAOgD,IAAI,SAAAF,GACvC,OAAOA,IAET,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,aACZc,EAAWC,IAAI,SAACC,EAAOC,GACtB,OACEpB,EAAAC,EAAAC,cAAA,OAAKmB,IAAKD,GACRpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASH,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMnB,UAAU,aAAaoB,GAAG,aAAaC,QAAU,kBAAK9B,EAAKqB,YAAYI,KAASA,EAAMvB,UAI1HI,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACAC,KAAK,aACLC,UAAWlD,gBA/BLiC,aAwDLC,kBACbC,YAdF,SAAyB1B,GACvB,MAAO,CACLhB,OAAQgB,EAAMhB,OACdM,YAAaU,EAAMV,cAGvB,SAA4BX,GAC1B,MAAO,CACLF,WAAYiE,YAAmBjE,EAAYE,GAC3CU,SAAWqD,YAAmBrD,EAAUV,KAQxC,KACA,CACEgD,MAAM,GALVD,CAOEE,ICjFSe,EAAa,aAEnB,SAASC,EAAUlE,GACxB,OAAO,SAAAC,GACL,OAAOC,MAAM,8DACZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAgE,GACJlE,EAAS,CACPM,KAAM0D,EACNjE,QAASmE,MAGZ3D,MAAMC,QAAQC,YCCb0D,8LAGFlD,KAAKJ,MAAMoD,6CAIXzD,QAAQwB,IAAIf,KAAKJ,MAAMqD,OACvB,IAAME,EAAYnD,KAAKJ,MAAMqD,MAAMb,IAAI,SAAAgB,GACrC,OAAOA,EAAKtC,OAEd,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKH,UAAU,aACbH,EAAAC,EAAAC,cAAA,UACG+B,EAAUf,IAAI,SAACC,EAAOC,GACrB,OAAOpB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOkB,IAAKD,GAAQD,iBAlBvCT,aAwCLC,kBACbC,YAZF,SAAyB1B,GACvB,MAAO,CACL6C,MAAO7C,EAAM6C,QAGjB,SAA4BlE,GAC1B,MAAO,CACLiE,UAAWF,YAAmBE,EAAWjE,KAQzC,KACA,CACEgD,MAAM,GALVD,CAOEoB,IC7DSG,EAAiB,iBAEvB,SAASC,EAAcxE,GAC5B,OAAO,SAAAC,GACL,OAAOC,MAAM,gDACZC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAsE,GACJxE,EAAS,CACPM,KAAMgE,EACNvE,QAASyE,MAGZjE,MAAMC,QAAQC,YCFbgE,8LAGFxD,KAAKJ,MAAM0D,iDAIX,IAAMG,EAAgBzD,KAAKJ,MAAM2D,WAAWnB,IAAI,SAAAsB,GAC9C,OAAOA,EAAUC,IAAIC,MAAM,MAE7B,OACE1C,EAAAC,EAAAC,cAAA,WAEGF,EAAAC,EAAAC,cAAA,UACEqC,EAAcrB,IAAI,SAACC,EAAOC,GACzB,OAAOpB,EAAAC,EAAAC,cAAA,MAAImB,IAAKD,GAAQD,cAfZT,aAkCTC,kBACbC,YAZF,SAAyB1B,GACvB,MAAO,CACLmD,WAAYnD,EAAMmD,aAGtB,SAA4BxE,GAC1B,MAAO,CACLuE,cAAeR,YAAmBQ,EAAevE,KAQjD,KACA,CACEgD,MAAM,GALVD,CAOE0B,oBCHWK,mLApCX,OACA3C,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACrDhD,EAAAC,EAAAC,cAAC0C,EAAA,EAAOK,MAAR,CAAc9C,UAAU,cAAc+C,KAAK,KAA3C,mBACAlD,EAAAC,EAAAC,cAAC0C,EAAA,EAAOO,SAAR,CAAiBC,GAAG,yBAClBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACArD,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMnB,UAAU,QAAQoB,GAAG,UAA3B,SACAvB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMnB,UAAU,QAAQoB,GAAG,WAA3B,cAKRvB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,UACLC,UAAWb,IAEbd,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,SACLC,UAAWK,IAEbhC,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,aACLC,UAAWlD,IAEbuB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWW,aA9BEgB,IAAM5C,WCKZ6C,mLARX,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACsD,EAAD,cALU9C,aCOE+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+ECbAC,EAAe,CACnB/B,MAAO,GACP7D,OAAQ,GACRmE,WAAY,IAuBC0B,EApBC,WAAkC,IAAjC7E,EAAiC8E,UAAAzE,OAAA,QAAAQ,IAAAiE,UAAA,GAAAA,UAAA,GAAzBF,EAAcG,EAAWD,UAAAzE,OAAA,EAAAyE,UAAA,QAAAjE,EAChD,OAAQkE,EAAO9F,MACb,KAAK0D,EACH,OAAOjD,OAAAsF,EAAA,EAAAtF,CAAA,GAAKM,EAAZ,CAAmB6C,MAAOkC,EAAOrG,UAEnC,KAAKF,EACH,OAAOkB,OAAAsF,EAAA,EAAAtF,CAAA,GAAKM,EAAZ,CAAmBhB,OAAQ+F,EAAOrG,UAEpC,IVlBqB,YUmBnB,OAAOgB,OAAAsF,EAAA,EAAAtF,CAAA,GAAKM,EAAZ,CAAmBV,YAAayF,EAAOrG,UAEzC,KAAKuE,EACH,OAAOvD,OAAAsF,EAAA,EAAAtF,CAAA,GAAKM,EAAZ,CAAmBmD,WAAY4B,EAAOrG,UAGxC,QACE,OAAOsB,ICXPiF,EAAmBT,OAAOU,sCAAwCC,IAClEC,EAAQC,YAAYR,EAASI,EAAiBK,YAAgBC,OACpEC,IAASC,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAUN,MAAOA,GAAOtE,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KAAetB,EAAAC,EAAAC,cAAC2E,EAAD,QAAoCC,SAASC,eAAe,SF+G7G,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnH,KAAK,SAAAoH,GACjCA,EAAaC","file":"static/js/main.0a2c9b55.chunk.js","sourcesContent":["export const LOAD_HOUSES = 'LOAD_HOUSES'\nexport const GET_HOUSE = 'GET_HOUSE'\n\nexport function loadHouses(payload) {\n  return dispatch => {\n    return fetch(\"https://anapioficeandfire.com/api/houses?page=1&pageSize=20\")\n    .then(res => res.json())\n    .then(houses => {\n      dispatch({\n        type: LOAD_HOUSES,\n        payload: houses\n      })\n    })\n    .catch(console.error)\n  }\n}\n\nexport const getHouse = chosenHouse => {\n  return {\n    type: GET_HOUSE,\n    payload: chosenHouse\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\n\nclass HouseInfo extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: []\n    };\n    this.swornMembers = this.swornMembers.bind(this);\n  }\n\n  swornMembers() {\n    if (this.props.chosenHouse.swornMembers.length > 0) {\n    let membersArray = []\n    let memberName = ''\n      this.props.chosenHouse.swornMembers.forEach(function(member) {\n\n        fetch(member)\n          .then(res => res.json())\n          .then(member => {\n            this.setState({\n              members: member.name\n            });\n            // membersArray.push(member.name)\n            // memberName = member.name\n            console.log(this.setState.members)\n          })\n          .catch(console.error)\n          \n          // console.log('arrrray', membersArray)\n          // console.log('naaaaame', member.name)\n          // console.log('myyy name', memberName)\n\n          // return membersArray\n        // membersArray.push(member)\n      });\n    // return membersArray\n    }\n  }\n\n  render() {\n    const infoHouse = this.props.chosenHouse\n    if(infoHouse === undefined){\n      return <h1>Please choose a house</h1>\n    }\n    return (\n      <div className=\"house-info-picture\">\n      <Container>\n      <Row>\n      <Col className=\"item-list\">\n          <ul>\n          <li className=\"house-info\" >House name: {infoHouse.name}</li>\n          <li className=\"house-info\" >Region: {infoHouse.region}</li>\n          <li className=\"house-info\" >Coat of Arms: {infoHouse.coatOfArms}</li>\n          <li className=\"house-info\" >Overlord: {infoHouse.overlord}</li>\n          </ul>\n      </Col>\n      </Row>\n      </Container>\n      </div>\n    )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    chosenHouse: state.chosenHouse\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null,\n    null,\n    {\n      pure: false\n    }\n  )(HouseInfo)\n);\n","import React, { Component } from 'react';\nimport './styles/style.scss';\n\nimport { withRouter } from \"react-router\";\n\nimport { Link, Route, Switch } from 'react-router-dom';\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { loadHouses, getHouse } from \"./actions/houseAction\"\n\nimport HouseInfo from \"./HouseInfo\"\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\nclass House extends Component {\n\n  componentDidMount() {\n    this.props.loadHouses();\n    this.props.getHouse();\n  }\n\n  handleClick = (house) => {\n    return this.props.getHouse(house)\n  }\n\n  render() {\n    console.log(this.props.houses)\n    const listHouses = this.props.houses.map(house => {\n      return house\n    })\n    return (\n      <div className=\"picture-house\">\n      <Container>\n        <Row>\n          <Col className=\"item-list\">\n            {listHouses.map((value, index) => {\n              return (\n                <div key={index}>\n                  <div className=\"house\" ><Link className=\"house-name\" to=\"/houseinfo\" onClick={ ()=> this.handleClick(value)}>{value.name}</Link></div>\n                </div>\n              )\n            })}\n            <Switch>\n              <Route\n              path=\"/houseinfo\"\n              component={HouseInfo}\n              //  render = {()=> <HouseInfo house={this.props.houses}/>}\n              />\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    houses: state.houses,\n    chosenHouse: state.chosenHouse\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadHouses: bindActionCreators(loadHouses, dispatch),\n    getHouse:  bindActionCreators(getHouse, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    {\n      pure: false\n    }\n  )(House)\n);\n","export const LOAD_BOOKS = 'LOAD_BOOKS'\n\nexport function loadBooks(payload) {\n  return dispatch => {\n    return fetch(\"https://anapioficeandfire.com/api/books?page=1&pageSize=50\")\n    .then(res => res.json())\n    .then(books => {\n      dispatch({\n        type: LOAD_BOOKS,\n        payload: books\n      })\n    })\n    .catch(console.error)\n  }\n}\n","import React, { Component } from 'react';\nimport './styles/style.scss';\n\nimport { withRouter } from \"react-router\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { loadBooks } from \"./actions/bookAction\"\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\n\nclass Books extends Component {\n\n  componentDidMount() {\n    this.props.loadBooks();\n  }\n\n  render() {\n    console.log(this.props.books)\n    const listBooks = this.props.books.map(book => {\n      return book.name\n    })\n    return (\n      <div className=\"picture-book\">\n        <Container>\n          <Row >\n            <Col className=\"item-list\">\n              <ol>\n                {listBooks.map((value, index) => {\n                  return <li className=\"book\" key={index}>{value}</li>\n                })}\n              </ol>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    books: state.books\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadBooks: bindActionCreators(loadBooks, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    {\n      pure: false\n    }\n  )(Books)\n);\n","export const GET_CHARACTERS = 'GET_CHARACTERS'\n\nexport function getCharacters(payload) {\n  return dispatch => {\n    return fetch(\"https://anapioficeandfire.com/api/characters\")\n    .then(res => res.json())\n    .then(characters => {\n      dispatch({\n        type: GET_CHARACTERS,\n        payload: characters\n      })\n    })\n    .catch(console.error)\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { withRouter } from \"react-router\";\n\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { getCharacters } from \"./actions/characterAction\"\n\nclass Character extends Component {\n\n  componentDidMount() {\n    this.props.getCharacters();\n  }\n\n  render() {\n    const listCharacter = this.props.characters.map(character => {\n      return character.url.slice(45)\n    })\n    return (\n      <div>\n\n         <ul>\n          {listCharacter.map((value, index) => {\n            return <li key={index}>{value}</li>\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    characters: state.characters\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getCharacters: bindActionCreators(getCharacters, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    null,\n    {\n      pure: false\n    }\n  )(Character)\n);\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport House from './House'\nimport Books from './Books'\nimport HouseInfo from './HouseInfo';\nimport Character from './Character';\n\nimport { Navbar, Nav, Container, Row } from 'react-bootstrap';\n\nimport './styles/style.scss';\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n    <Container>\n      <Row>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand className=\"main-header\" href=\"/\">Game of Thrones</Navbar.Brand>\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav>\n            <Link className=\"links\" to=\"/books\">Books</Link>\n            <Link className=\"links\" to=\"/houses\">Houses</Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n    </Row>\n    <Switch>\n      <Route\n        path=\"/houses\"\n        component={House}\n      />\n      <Route\n        path=\"/books\"\n        component={Books}\n      />\n      <Route\n        path=\"/houseinfo\"\n        component={HouseInfo}\n      />\n      <Route\n        path=\"/characters\"\n        component={Character}\n      />\n    </Switch>\n    </Container>\n    );\n  }\n};\n\nexport default NavBar\n","import React, { Component } from 'react';\nimport './styles/style.scss';\n\nimport NavBar from \"./Navbar\"\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"main-pic\">\n        <NavBar/>\n      </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOAD_BOOKS } from \"../actions/bookAction\"\nimport { LOAD_HOUSES } from \"../actions/houseAction\"\nimport { GET_HOUSE } from \"../actions/houseAction\"\nimport { GET_CHARACTERS } from \"../actions/characterAction\"\n\nconst initialState = {\n  books: [],\n  houses: [],\n  characters: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_BOOKS: {\n      return { ...state, books: action.payload}\n    }\n    case LOAD_HOUSES: {\n      return { ...state, houses: action.payload}\n    }\n    case GET_HOUSE: {\n      return { ...state, chosenHouse: action.payload}\n    }\n    case GET_CHARACTERS: {\n      return { ...state, characters: action.payload}\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./reducers/reducer\";\n\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}